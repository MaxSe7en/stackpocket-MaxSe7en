
/**
 * Sends a POST request to the track_url with the provided trackYieldData, trackState, stopIfWin, and stopIfNotWin as data.
 *
 * @param trackYieldData - The track yield data to be sent.
 * @param trackState - The state of the track.
 * @param stopIfWin - Determines whether to stop if the track wins.
 * @param stopIfNotWin - Determines whether to stop if the track does not win.
 */
export const getTrackYieldData = async (trackYieldData: { bets: any; trackInfo: any; }, trackState: any, stopIfWin: any, stopIfNotWin: any) => {
  let _all: any = {};
  _all["bets"] = {...trackYieldData.bets};
  _all["trackData"] = trackState;
  _all["trackInfo"] = {}; // Initialize the trackInfo property as an empty object
  _all["trackInfo"]["total_draws"] = +trackYieldData.trackInfo.total_draws;
  _all["trackInfo"]["total_amt_bets"] = trackYieldData.trackInfo.total_amt_bets;
  _all["trackInfo"]["total_amt_to_pay"] = trackYieldData.trackInfo.total_amt_to_pay;
  _all["trackInfo"]["stop_if_win"] = stopIfWin;
  _all["trackInfo"]["stop_if_not_win"] = stopIfNotWin;
  console.log("----------------[][][]--------------->", _all)

  try {
    const response = await axios.post(track_url, _all, config);
    console.log(response);
  } catch (error) {
    console.error(error);
    // Handle error
  }
}